{"ast":null,"code":"var _jsxFileName = \"/Users/juanruiz/Documents/apps/react-digital/src/components/user/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Card from '../ui/Card';\nimport styles from './Register.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  first_name: 'name',\n  last_name: 'last',\n  email: 'test@gmail.com',\n  info: ''\n};\n\nconst Register = () => {\n  _s();\n\n  const [credentials, setCredentials] = useState(initialFormValues);\n\n  const InputChangeHandler = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      value,\n      name\n    } = target;\n    setCredentials({ ...credentials,\n      [name]: value\n    });\n  };\n\n  const fetchForm = async () => {\n    try {\n      const response = await fetch('https://tesstapireact-af87a-default-rtdb.firebaseio.com/form.json', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      }).then(res => {\n        console.log(res);\n\n        if (res.status !== 200) {\n          setCredentials({ ...credentials,\n            'info': 'Error: ' + err.statusText\n          });\n        }\n      });\n    } catch (error) {\n      setCredentials({ ...credentials,\n        'info': 'Error: ' + error.message\n      });\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const {\n      first_name,\n      last_name,\n      email\n    } = credentials;\n    console.log(credentials, first_name, last_name, email);\n    const emailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    const formValid = first_name && last_name && emailValid;\n\n    if (formValid) {\n      fetchForm();\n      setCredentials(initialFormValues);\n    } else {\n      setCredentials({ ...credentials,\n        'info': 'Error: Datos invalidos'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.info,\n      children: credentials.info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"first_name\",\n          onChange: InputChangeHandler,\n          value: credentials.first_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"last_name\",\n          onChange: InputChangeHandler,\n          value: credentials.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          onChange: InputChangeHandler,\n          value: credentials.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btn,\n          type: \"submit\",\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"NQzSjjR/LKChcKoi/Ty6GPy/W6M=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/juanruiz/Documents/apps/react-digital/src/components/user/Register.js"],"names":["useState","Card","styles","initialFormValues","first_name","last_name","email","info","Register","credentials","setCredentials","InputChangeHandler","target","value","name","fetchForm","response","fetch","method","headers","body","JSON","stringify","then","res","console","log","status","err","statusText","error","message","submitHandler","e","preventDefault","emailValid","test","formValid","form","control","actions","btn"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport Card from '../ui/Card'\r\nimport styles from './Register.module.css'\r\n\r\nconst initialFormValues = {\r\n  first_name: 'name',\r\n  last_name: 'last',\r\n  email: 'test@gmail.com',\r\n  info: '',\r\n}\r\n\r\nconst Register = () => {\r\n  const [credentials, setCredentials] = useState(initialFormValues)\r\n\r\n  const InputChangeHandler = ({ target }) => {\r\n    const { value, name } = target\r\n\r\n    setCredentials({\r\n      ...credentials,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  const fetchForm = async () => {\r\n    try {\r\n      const response = await fetch('https://tesstapireact-af87a-default-rtdb.firebaseio.com/form.json', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        if(res.status !== 200) {\r\n          setCredentials({...credentials,'info' : 'Error: '+err.statusText})\r\n        }\r\n      })\r\n    } catch (error) {\r\n      setCredentials({...credentials,'info' : 'Error: '+error.message})\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { first_name, last_name, email } = credentials\r\n    console.log(credentials, first_name, last_name, email)\r\n\r\n    const emailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\r\n    const formValid = first_name && last_name && emailValid\r\n    \r\n    if (formValid) {\r\n      fetchForm()\r\n      setCredentials(initialFormValues)\r\n    } else {\r\n      setCredentials({...credentials,'info' : 'Error: Datos invalidos'})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <p className={styles.info}>{credentials.info}</p>\r\n      <form className={styles.form} onSubmit={submitHandler}>\r\n        <div className={styles.control}>\r\n          <label>First name</label>\r\n          <input type=\"text\" name=\"first_name\" \r\n            onChange={InputChangeHandler} value={credentials.first_name}/>\r\n        </div>\r\n        <div className={styles.control}>\r\n          <label>Last name</label>\r\n          <input type=\"text\" name=\"last_name\" \r\n            onChange={InputChangeHandler} value={credentials.last_name}/>\r\n        </div>\r\n        <div className={styles.control}>\r\n          <label>Email</label>\r\n          <input type=\"text\" name=\"email\" \r\n            onChange={InputChangeHandler} value={credentials.email} />\r\n        </div>\r\n        <div className={styles.actions}>\r\n          <button className={styles.btn} type=\"submit\">\r\n            send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}